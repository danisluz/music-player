<?php
function size($recursive = false)
{
    return $this->ls()->then(function($result) use ($recursive) {
        return new Promise(function ($resolve, $reject) use ($result, $recursive) {
            $this->filesystem->getLoop()->futureTick(function () use ($result, $recursive, $resolve, $reject) {
                $this->processSizeContents($result, $recursive)->then($resolve, $reject);
            });
        });
    });
}

return function ($container) {
    $container['template.theme'] = dirname(__FILE__).'/theme';
    
    /*$container['markdown.renderer'] = function ($container) {
        return $container['ciconia.markdown.renderer'];
    };*/

    $container['twig'] = $container->extend('twig', function ($twig) use ($container) {
        $twig->addFunction(new Twig_SimpleFunction('extract_title', function ($content) {
            $dom = new DOMDocument();
            $dom->loadHTML($content);
            
            $xpath = new DOMXPath($dom);
            
            $element = $xpath->evaluate('descendant-or-self::h1')->item(0);
            
            if ($element && $element->textContent) {
               return $element->textContent;
            }
            
            return null;
       }));

        return $twig;
    });

    $container['template.map'] = [
        'index.html' => 'homepage.html.twig'
    ];

    $container['document.finder'] = $container->protect(function ($path) {
        $finder = new Symfony\Component\Finder\Finder();
        return $finder
            ->name('/\.(markdown|md|mdown)$/')
            ->files()
            ->notPath('/^node_modules/')
            ->in($path)
        ;
    });
    
    $container['asset.finder'] = $container->protect(function ($path) {
        $finder = new Symfony\Component\Finder\Finder();
        
        // ---

        $downloadFinder = new Symfony\Component\Finder\Finder();
        $downloadFinder
            ->name('/\.(js)$/')
            ->files()
            ->path('/^dist/')
            ->in($path)
        ;

        $finder->append($downloadFinder);

        // ---

        $exampleFinder = new Symfony\Component\Finder\Finder();
        $exampleFinder
            ->name('/\.(html|css|js|jpg|png|json)$/')
            ->files()
            ->path('/^examples/')
            ->in($path)
        ;

        $finder->append($exampleFinder);

        // ---

        $libsFinder = new Symfony\Component\Finder\Finder();
        $libsFinder
            ->name('/\.(js)$/')
            ->files()
            ->path('/^libs/')
            ->notPath('/^libs\/qunit/')
            ->notPath('/^libs\/jquery\-loader\.js/')
            ->in($path)
        ;

        $finder->append($libsFinder);
        
        // ---
        
        $assetFinder = new Symfony\Component\Finder\Finder();
        $assetFinder
            ->files()
            ->path('/^assets/')
            ->in($path.'/.berti/theme')
        ;
        
        $finder->append($assetFinder);

        // ---

        return $finder;
    });

    $container['github.client'] = function () {
        $client = new Github\Client();

        $client->authenticate('jsor', 'spwf4234g', Github\Client::AUTH_HTTP_PASSWORD);

        return $client;
    };
};
